<Window x:Class="Bas.Sphere.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="http://schemas.microsoft.com/netfx/2007/xaml/presentation"
        xmlns:local="clr-namespace:Bas.Sphere"
        xmlns:system="clr-namespace:System;assembly=mscorlib"        
        xmlns:shaders="clr-namespace:Bas.Sphere.ShaderEffects"
        xmlns:localconverters="clr-namespace:Bas.Sphere.Converters"
        xmlns:properties="clr-namespace:Bas.Sphere.Properties"
        Background="Black"
        Title="MainWindow"
        KeyUp="Window_KeyUp">

    <Window.InputBindings>
        <KeyBinding Key="S"
                    Modifiers="Control"
                    Command="Save" />
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="Save"
                        Executed="ExecuteSaveCommand" />
    </Window.CommandBindings>

    <Window.Resources>

        <ObjectDataProvider x:Key="VisionTypes" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:VisionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <localconverters:HandProximityToBooleanConverter x:Key="HandProximityToBooleanConverter" />

        <Storyboard x:Key="HeartbeatAudioStoryboard" RepeatBehavior="Forever">
            <DoubleAnimation Storyboard.TargetProperty="(MediaElement.Volume)" Storyboard.Target="{Binding ElementName=IdleSoundMediaElement}" BeginTime="0:0:0" Duration="0:0:1" From="1" To="0.5" />
            <DoubleAnimation Storyboard.TargetProperty="(MediaElement.Volume)" Storyboard.Target="{Binding ElementName=IdleSoundMediaElement}" BeginTime="0:0:2" Duration="0:0:1" From="0.5" To="1">
                <DoubleAnimation.EasingFunction>
                    <QuinticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        
        <Storyboard x:Key="HeartbeatIdleToActiveStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(MediaElement.Volume)" Storyboard.Target="{Binding ElementName=IdleSoundMediaElement}" BeginTime="0:0:0" Duration="0:0:1" To="1" />            
        </Storyboard>
        
        <Storyboard x:Key="HeartbeatStoryboard" RepeatBehavior="Forever">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.Target="{Binding ElementName=CloudLayerGrid}" BeginTime="0:0:0" Duration="0:0:1" From="1" To="0.75" />
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.Target="{Binding ElementName=CloudLayerGrid}" BeginTime="0:0:2" Duration="0:0:1" From="0.75" To="1">
                <DoubleAnimation.EasingFunction>
                    <QuinticEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ToActiveModeStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.Target="{Binding ElementName=CloudLayerGrid}" >
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Grid>
        <Grid x:Name="VisualsGrid" RenderTransformOrigin="0.5,0.5" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">
            <Grid.Effect>
                <shaders:BarrelDistortionEffect BarrelAmountX="{Binding BarrelDistortionAmount, Source={x:Static properties:Settings.Default}}" />
            </Grid.Effect>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.RenderTransform>
                <TransformGroup>
                    <RotateTransform Angle="{Binding SphereFrontAngle, Source={x:Static properties:Settings.Default}}" />
                    <ScaleTransform ScaleX="{Binding Scale, Source={x:Static properties:Settings.Default}}" ScaleY="{Binding Scale, Source={x:Static properties:Settings.Default}}" />
                </TransformGroup>
            </Grid.RenderTransform>

            <Grid ClipToBounds="True" Grid.RowSpan="2" x:Name="CloudLayerGrid" Visibility="{Binding IsChecked, ElementName=AreCloudsVisibleCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}">
                <local:CloudLayer Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" MinimumSpeed="0.2" AccelerationRate="3.5" Acceleration="{Binding HandProximity}" Visibility="{Binding IsChecked, ElementName=IsCloudLayerOneVisibleCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <local:CloudLayer Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" MinimumSpeed="0.3" AccelerationRate="8.0" Acceleration="{Binding HandProximity}" Visibility="{Binding IsChecked, ElementName=IsCloudLayerTwoVisibleCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}" Opacity="0.5" />
            </Grid>

            <local:Starburst ClipToBounds="True" Grid.RowSpan="2" Visibility="{Binding IsChecked, ElementName=IsStarburstVisibleCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"
                         Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                         RotationSpeed="{Binding StarburstRotationSpeed, Source={x:Static properties:Settings.Default}}"
                         ParallaxDistance="{Binding StarburstParallaxDistance, Source={x:Static properties:Settings.Default}}"
                         IsRevealed="{Binding HandProximity, Converter={StaticResource HandProximityToBooleanConverter}}" />

            <local:Vision Grid.Row="1" x:Name="Vision" Margin="10" Type="Love" RenderTransformOrigin="0.5,0.5" />

            <local:TestImage Grid.RowSpan="2" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                             Visibility="{Binding IsChecked, ElementName=IsTestImageVisibleCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
                
        <StackPanel x:Name="ControlsStackPanel" VerticalAlignment="Bottom" Visibility="{Binding IsControlsPanelVisible, Source={x:Static properties:Settings.Default}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel x:Name="DebugControlsStackPanel" Background="#AAFFFFFF" Visibility="{Binding IsDebugControlsPanelVisible, Source={x:Static properties:Settings.Default}, Converter={StaticResource BooleanToVisibilityConverter}}">

                <CheckBox x:Name="IsHandTrackingEnabledCheckBox" IsChecked="{Binding IsHandTrackingEnabled, Source={x:Static properties:Settings.Default}}">Handen tracken</CheckBox>
                <CheckBox x:Name="AreCloudsVisibleCheckBox" IsChecked="True">Wolken</CheckBox>
                <CheckBox x:Name="IsCloudLayerOneVisibleCheckBox" IsChecked="True" Margin="10,0">CloudLayer 1</CheckBox>
                <CheckBox x:Name="IsCloudLayerTwoVisibleCheckBox" IsChecked="True" Margin="10,0">CloudLayer 2</CheckBox>

                <CheckBox x:Name="IsStarburstVisibleCheckBox" IsChecked="True">Sterren</CheckBox>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Draaisnelheid sterren" />
                    <Slider x:Name="StarburstRotationSpeedSlider" Minimum="0.0" Maximum="360.0" Width="600" Value="{Binding StarburstRotationSpeed, Source={x:Static properties:Settings.Default}}"/>
                    <TextBlock Text="{Binding StarburstRotationSpeed, Source={x:Static properties:Settings.Default}}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Parallax-afstand sterren" />
                    <Slider x:Name="ParallaxDistanceSlider" Minimum="0.0" Maximum="50.0" Width="500" Value="{Binding StarburstParallaxDistance, Source={x:Static properties:Settings.Default}}"/>
                    <TextBlock Text="{Binding StarburstParallaxDistance, Source={x:Static properties:Settings.Default}}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <ComboBox Width="100" HorizontalAlignment="Left" ItemsSource="{Binding Source={StaticResource VisionTypes}}" SelectedItem="{Binding Type, ElementName=Vision}" />
                    <Button Width="100" HorizontalAlignment="Left" Click="RevealVisionButton_Click">Toon visioen</Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Handpositie" />
                    <Slider x:Name="HandProximitySlider" Minimum="0.0" Maximum="1.0" Width="300" Value="{Binding HandProximity, Mode=TwoWay}">
                        <Slider.Style>
                            <Style TargetType="Slider">
                                <Style.Triggers>
                                    <Trigger Value="0" Property="Value">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Name="BeginHeartbeatStoryboard"  Storyboard="{StaticResource HeartbeatStoryboard}"/>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="BeginHeartbeatStoryboard" />
                                            <BeginStoryboard Name="BeginToActiveModeStoryboard" Storyboard="{StaticResource ToActiveModeStoryboard}" />
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                    <TextBlock Text="{Binding HandProximity}" />
                </StackPanel>                
            </StackPanel>

            <StackPanel x:Name="ProjectionControlsStackPanel" Background="#AAFFFFFF" Visibility="{Binding IsProjectionControlsPanelVisible, Source={x:Static properties:Settings.Default}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <CheckBox x:Name="IsTestImageVisibleCheckBox" IsChecked="False">Testbeeld</CheckBox>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Voorkant bol</TextBlock>
                    <Slider x:Name="SphereFrontAngleSlider" Minimum="0" Maximum="360" Width="500" Value="{Binding SphereFrontAngle, Source={x:Static properties:Settings.Default}}"/>
                    <TextBlock Text="{Binding SphereFrontAngle, Source={x:Static properties:Settings.Default}}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Distortion" />
                    <Slider x:Name="BarrelDistortionSlider" Minimum="0.0" Maximum="1.0" Width="300" Value="{Binding BarrelDistortionAmount, Source={x:Static properties:Settings.Default}}" />
                    <TextBlock Text="{Binding BarrelDistortionAmount, Source={x:Static properties:Settings.Default}}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Schaal" />
                    <Slider x:Name="ScaleSlider" Minimum="1.0" Maximum="1.4636678" Width="300" Value="{Binding Scale, Source={x:Static properties:Settings.Default}}" />
                    <TextBlock Text="{Binding Scale, Source={x:Static properties:Settings.Default}}" />
                </StackPanel>
            </StackPanel>
            <Button x:Name="CalibrationButton" Click="CalibrationButton_Click">Kalibreer</Button>            
        </StackPanel>
        
        <TextBlock x:Name="CalibrationTextBlock" Visibility="Hidden" FontSize="240" HorizontalAlignment="Center" VerticalAlignment="Center">1</TextBlock>

        <MediaElement x:Name="IdleSoundMediaElement" Visibility="Collapsed" Source="Audio/Idle ambience.wav" LoadedBehavior="Manual" Volume="1" MediaEnded="RepeatingMediaElement_MediaEnded" />        
    </Grid>

</Window>
